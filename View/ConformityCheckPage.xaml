<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Ashwell_Maintenance.View.ConformityCheckPage"
             xmlns:local="clr-namespace:Ashwell_Maintenance.Customs"
             Shell.NavBarIsVisible="False"
             Shell.TabBarIsVisible="False"
             BackgroundColor="#141414">

    <Grid Padding="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid RowSpacing="5" Margin="0, 30, 0, 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ImageButton Source="back" Padding="10" Margin="-10" HeightRequest="60" WidthRequest="60" HorizontalOptions="Start" VerticalOptions="Start" Clicked="ConformityCheckBack"/>

            <Image Source="conformity_check.png" WidthRequest="60" HorizontalOptions="Center"/>

            <Label Grid.Row="1" Text="University of Leicester
                   Conformity Checklist For Gas Installations" TextColor="#fff" FontSize="24" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center" Margin="0, 0, 0, 20"/>
        </Grid>
        
        <ScrollView x:Name="CCSection1" Grid.Row="1" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Spacing="40">
                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20, 0, 0">
                    <BoxView Color="#222225"/>
                </Frame>

                <Label Text="Primary Information" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                <VerticalStackLayout>
                    <Label Text="UERN°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="uern" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Sheet No°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="SheetNo" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" Keyboard="Numeric"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Warning Notice Ref No° (If Applicable):" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="WarningNoticeRefNo" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" Keyboard="Numeric"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Name and Address of Premises:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="nameAndAddressOfPremises" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Location:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="location" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Remedial Work Required" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkRemedialToWorkRequiredYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkRemedialToWorkRequiredNo" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Tests Completed Satisfactory" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkTestsCompletedSatisfactoryYes" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkTestsCompletedSatisfactoryNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20">
                    <BoxView Color="#222225"/>
                </Frame>

                <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="CCNext1"/>
            </VerticalStackLayout>
        </ScrollView>

        <ScrollView x:Name="CCSection2" Grid.Row="1" IsVisible="false" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Spacing="40">
                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20, 0, 0">
                    <BoxView Color="#222225"/>
                </Frame>

                <Label Text="Ventilation Checks" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Ventilation Calculations:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="ventilationCalculations" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Existing High Level" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkExistingHighLevelCM" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="cm²" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkExistingHighLevelMH">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingHighLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="m³/h" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                    
                    <VerticalStackLayout>
                        <Label Text="Value:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="existingHighLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Existing Low Level" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkExistingLowLevelCM" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="cm²" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkExistingLowLevelMH">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkExistingLowLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="m³/h" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>

                    <VerticalStackLayout>
                        <Label Text="Value:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="existingLowLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Required High Level" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkRequiredHighLevelCM" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="cm²" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkRequiredHighLevelMH">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredHighLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="m³/h" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>

                    <VerticalStackLayout>
                        <Label Text="Value:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="requiredHighLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Required Low Level" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkRequiredLowLevelCM" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="cm²" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkRequiredLowLevelMH">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelMH}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelMH}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelCM}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRequiredLowLevelCM}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="m³/h" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>

                    <VerticalStackLayout>
                        <Label Text="Value:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="requiredLowLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Is the High and Low Level Ventilation Correctly Sized?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkVentilationCorrectlySizedYes" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkVentilationCorrectlySizedNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationCorrectlySizedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Is the High and Low Level Ventilation at the Correct Height?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkVentilationAtTheCorrectHeightYes" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkVentilationAtTheCorrectHeightNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationAtTheCorrectHeightNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Does the Ventilation Arrangements Comply with all the Relevant Standards and the Manufactures Instructions of all Appliances?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkVentilationArrangementsYes" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkVentilationArrangementsNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationArrangementsYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationArrangementsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Comments:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="ventilationChecksComments" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Where an Issue Has Been Identified, Classify the Risk:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 15"/>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkA_ID1">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkA_ID1}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#fc5434" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkA_ID1}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category A  ( ID )" TextColor="#fc5434" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkB_AR1">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkB_AR1}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#fcac34" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkB_AR1}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category B  ( AR )" TextColor="#fcac34" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkC_NCS1">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkC_NCS1}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#34fc34" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkC_NCS1}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category C  ( NCS )" TextColor="#34fc34" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>
                </VerticalStackLayout>

                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20">
                    <BoxView Color="#222225"/>
                </Frame>

                <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="CCNext2"/>
            </VerticalStackLayout>
        </ScrollView>

        <ScrollView x:Name="CCSection3" Grid.Row="1" IsVisible="false" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Spacing="40">
                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20, 0, 0">
                    <BoxView Color="#222225"/>
                </Frame>

                <Label Text="Flue Checks" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Have All Flues Been Fitted in Accordance With the Manufactures Instructions and Appropriate Standards?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesFittedYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesFittedYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesFittedYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesFittedNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesFittedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesFittedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesFittedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesFittedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesFittedNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesFittedNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesFittedNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Have All The Flues Been Adequately Supported Throughout Their Entire Route and Brackets in Good Condition?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesSupportedYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesSupportedYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesSupportedYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesSupportedNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesSupportedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesSupportedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesSupportedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesSupportedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesSupportedNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesSupportedNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesSupportedNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Are Flue Gas Pressures in Line With Manufactures Requirements at the Appliance Flue Outlet Connection?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesInLineYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInLineYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInLineYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesInLineNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInLineNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInLineNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesInLineNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesInLineNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesInLineNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInLineNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInLineNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Are There Facilities for Measuring and Undertaking a Flue Gas Analysis?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFacilitiesYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFacilitiesYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFacilitiesYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFacilitiesNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFacilitiesNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFacilitiesNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFacilitiesNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFacilitiesNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFacilitiesNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFacilitiesNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFacilitiesNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Do all Flues Run to the Correct Gradients and Have They Been Provided With Suitable Traps and Drains?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFlueGradientsYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueGradientsYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueGradientsYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFlueGradientsNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueGradientsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueGradientsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFlueGradientsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFlueGradientsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFlueGradientsNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueGradientsNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueGradientsNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Are the Flues Provided With Suitable Inspection Access if Fitted Within a Void?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesInspectionYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInspectionYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInspectionYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesInspectionNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInspectionNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInspectionNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesInspectionNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFluesInspectionNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFluesInspectionNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInspectionNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFluesInspectionNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Are all Flue Joints Tight and Leak Free?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFlueJointsYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueJointsYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueJointsYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFlueJointsNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueJointsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueJointsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFlueJointsNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFlueJointsNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFlueJointsNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueJointsNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFlueJointsNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Comments:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="flueChecksComments" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Where an Issue Has Been Identified, Classify the Risk:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 15"/>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkA_ID2">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkA_ID2}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#fc5434" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkA_ID2}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category A  ( ID )" TextColor="#fc5434" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkB_AR2">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkB_AR2}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#fcac34" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkB_AR2}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category B  ( AR )" TextColor="#fcac34" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkC_NCS2">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkC_NCS2}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#34fc34" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkC_NCS2}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category C  ( NCS )" TextColor="#34fc34" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>
                </VerticalStackLayout>

                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20">
                    <BoxView Color="#222225"/>
                </Frame>

                <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="CCNext3"/>
            </VerticalStackLayout>
        </ScrollView>

        <ScrollView x:Name="CCSection4" Grid.Row="1" IsVisible="false" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Spacing="40">
                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20, 0, 0">
                    <BoxView Color="#222225"/>
                </Frame>

                <Label Text="Safety Interlocks" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Are the Required Safety Interlocks Provided?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkInterlocksProvidedYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkInterlocksProvidedYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkInterlocksProvidedYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkInterlocksProvidedNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkInterlocksProvidedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkInterlocksProvidedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkInterlocksProvidedNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkInterlocksProvidedNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkInterlocksProvidedNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkInterlocksProvidedNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkInterlocksProvidedNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Is There an Emergency Shut Off Button, if so, Is It in a Suitable Location?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkEmergencyShutOffButtonYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkEmergencyShutOffButtonNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkEmergencyShutOffButtonNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkEmergencyShutOffButtonNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="What Does the Emergency Stop Button Operate?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <VerticalStackLayout>
                        <Label Text="Comment:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="emergencyStopButtonComment" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Is the Plant Interlinked to the Fire Alarm System?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkPlantInterlinkYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantInterlinkYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantInterlinkYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkPlantInterlinkNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantInterlinkNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantInterlinkNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkPlantInterlinkNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkPlantInterlinkNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkPlantInterlinkNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantInterlinkNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantInterlinkNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Does Fuel Shut Off on Fire Alarm Activation and the Above Button?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFuelShutOffYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelShutOffYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelShutOffYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFuelShutOffNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelShutOffNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelShutOffNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFuelShutOffNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFuelShutOffNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFuelShutOffNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelShutOffNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelShutOffNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Is the Fuel Shut Off on First Entry to The Room?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFuelFirstEntryYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelFirstEntryYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelFirstEntryYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFuelFirstEntryNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelFirstEntryNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelFirstEntryNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFuelFirstEntryNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFuelFirstEntryNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkFuelFirstEntryNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelFirstEntryNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFuelFirstEntryNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="If Flues Are Induced Draft, Does The System Stop When the Pressure Switch Is Removed?" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkSystemStopYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemStopYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemStopYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkSystemStopNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemStopNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemStopNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkSystemStopNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkSystemStopNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkSystemStopNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemStopNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemStopNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Do the Systems Work, a Simple Test and Reset Will Be Required in Conjunction" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkTestAndResetYes">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestAndResetYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestAndResetYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkTestAndResetNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestAndResetNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestAndResetNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkTestAndResetNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkTestAndResetNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkTestAndResetNA">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestAndResetNA}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestAndResetNA}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Comments:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="safetyInterlocksComments" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout>
                    <Label Text="Where an Issue Has Been Identified, Classify the Risk:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 15"/>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkA_ID3">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkA_ID3}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#fc5434" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkA_ID3}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category A  ( ID )" TextColor="#fc5434" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkB_AR3">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkB_AR3}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#fcac34" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkB_AR3}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category B  ( AR )" TextColor="#fcac34" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>

                    <HorizontalStackLayout>
                        <CheckBox x:Name="checkC_NCS3">
                            <CheckBox.Triggers>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkC_NCS3}, Path=IsChecked}" Value="True">
                                    <Setter Property="Color" Value="#34fc34" />
                                </DataTrigger>
                                <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkC_NCS3}, Path=IsChecked}" Value="False">
                                    <Setter Property="Color" Value="#fff" />
                                </DataTrigger>
                            </CheckBox.Triggers>
                        </CheckBox>
                        <Label Text="Category C  ( NCS )" TextColor="#34fc34" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                    </HorizontalStackLayout>
                </VerticalStackLayout>
                

                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20">
                    <BoxView Color="#222225"/>
                </Frame>

                <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="CCNext4"/>
            </VerticalStackLayout>
        </ScrollView>

        <ScrollView x:Name="CCSection5" Grid.Row="1" IsVisible="false" VerticalScrollBarVisibility="Never">
            <VerticalStackLayout Spacing="40">
                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20, 0, 0">
                    <BoxView Color="#222225"/>
                </Frame>

                <Label Text="Copies must be sent to UoL Technicials  the main site e-mail and not to any site individuals e-mail addresses"
                       TextColor="#707070"
                       FontSize="16 "
                       FontFamily="SatoshiMedium"
                       FontAttributes="Italic"
                       HorizontalTextAlignment="Center"/>

                <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100"  Margin="0, 20">
                    <BoxView Color="#222225"/>
                </Frame>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Are System Dosing Facilities Available to Sample and Dose the Heating System as Necessary? ( For Example - a Dosing Pot )" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkSystemDosingFacilitiesYes" IsChecked="True">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                        </HorizontalStackLayout>

                        <HorizontalStackLayout>
                            <CheckBox x:Name="checkSystemDosingFacilitiesNo">
                                <CheckBox.Triggers>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="Color" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="Color" Value="#fff" />
                                    </DataTrigger>

                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesYes}, Path=IsChecked}" Value="True">
                                        <Setter Property="IsChecked" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesYes}, Path=IsChecked}" Value="False">
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>

                            <Label Text="No" TextColor="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked}" Value="True">
                                        <Setter Property="TextColor" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkSystemDosingFacilitiesNo}, Path=IsChecked}" Value="False">
                                        <Setter Property="TextColor" Value="#fff" />
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </HorizontalStackLayout>
                    </FlexLayout>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Engineer's Name:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="engineersName" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Engineer's Signature:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="engineersSignature" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Contractor:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="contractor" Text="Ashwell Maintenance Ltd" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium" IsEnabled="false"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Company Gas-Safe Registration No°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="companyGasSafeRegistrationNo" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Engineer's Gas Safe ID No°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="engineersGasSafeIDNo" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Inspection Date:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="inspectionDate" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Client's Name:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="clientsName" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Client's Signature:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                        <local:LinelessEditor x:Name="clientsSignature" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout Spacing="5">
                    <Label Text="Date:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                    <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                        <local:LinelessEntry x:Name="date" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                    </Frame>
                </VerticalStackLayout>

                <Frame Grid.Row="2" Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                    <BoxView Color="#222225"/>
                </Frame>

                <Label Text="By sining this document, I certified that I carried out the above agreed works on the dates provided and all this information is correct."
                       TextColor="#707070"
                       FontSize="16 "
                       FontFamily="SatoshiMedium"
                       FontAttributes="Bold"
                       HorizontalTextAlignment="Center"/>

                <Frame Grid.Row="2" Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                    <BoxView Color="#222225"/>
                </Frame>

                <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="CCNext5"/>
            </VerticalStackLayout>
        </ScrollView>
    </Grid>
</ContentPage>