<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Ashwell_Maintenance.View.BoilerHouseDataSheetPage"
             xmlns:local="clr-namespace:Ashwell_Maintenance.Customs"
             xmlns:sys="clr-namespace:System;assembly=netstandard"
             Shell.NavBarIsVisible="False"
             Shell.TabBarIsVisible="False"
             BackgroundColor="#141414">

    <Grid>
        <Grid Padding="20, 20, 20, 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid RowSpacing="5" Margin="0, 30, 0, 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ImageButton x:Name="BoilderHouseDataSheetBackBtt" Source="back" Padding="10" Margin="-10" HeightRequest="60" WidthRequest="60" HorizontalOptions="Start" VerticalOptions="Start" Clicked="BoilerHouseDataSheetBack"/>

                <Image Source="boiler_house_data.png" WidthRequest="60" HorizontalOptions="Center"/>

                <VerticalStackLayout Grid.Row="1" Spacing="20" Margin="0, 0, 0, -5">
                    <Label Text="University of Leicester&#10;Boiler House / Plantroom Data Sheet" TextColor="#fff" FontSize="24" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>
                </VerticalStackLayout>

                <VerticalStackLayout x:Name="folderSearch" Grid.Row="2" Spacing="20" IsVisible="False" Margin="0, 20, 0, 0">
                    <Label Text="Choose Folder" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <Frame Grid.Row="1" Padding="0" BorderColor="Transparent" BackgroundColor="Transparent" CornerRadius="100">
                        <Grid>
                            <local:LinelessSearch x:Name="searchEntry" TextChanged="SearchEntry_TextChanged" Background="#222225" PlaceholderColor="#707070" CancelButtonColor="#fff" Placeholder="Search Folders" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium"/>

                            <Image Source="search.png" WidthRequest="25" HorizontalOptions="Start" BackgroundColor="#222225" Margin="20,0,0,0"/>
                        </Grid>
                    </Frame>

                    <Frame Grid.Row="2" Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100" Margin="0,0,0,0">
                        <BoxView Color="#222225"/>
                    </Frame>
                </VerticalStackLayout>
            </Grid>
        
            <ScrollView x:Name="BHDSSection1" Grid.Row="1" VerticalScrollBarVisibility="Never">
                <VerticalStackLayout Spacing="40" Margin="0, 40, 0, 0">
                    <Label Text="Primary Information" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="UERN°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="uern" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Sheet No°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="SheetNo" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" Keyboard="Numeric"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Warning Notice Ref No° (If Applicable):" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="WarningNoticeRefNo" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Name of Premices:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="nameOfPremises" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Address of Premises:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="adressOfPremises" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Remedial Work Required" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkRemedialToWorkRequiredYes">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkRemedialToWorkRequiredNo" IsChecked="True">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRemedialToWorkRequiredYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Tests Completed Satisfactory" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkTestsCompletedSatisfactoryYes" IsChecked="True">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkTestsCompletedSatisfactoryNo">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkTestsCompletedSatisfactoryNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Appliances Covered By This Check:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                            <local:LinelessEditor x:Name="appliancesCoveredByThisCheck" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>

                    <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="BHDSNext1"/>
                </VerticalStackLayout>
            </ScrollView>

            <ScrollView x:Name="BHDSSection2" Grid.Row="1" IsVisible="False" VerticalScrollBarVisibility="Never">
                <VerticalStackLayout Spacing="40" Margin="0, 40, 0, 0">
                    <Label Text="Meter House Details" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Location:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="meterHouseLocation" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Pipework to Gas Meter" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkPipeworkToGasMeterYes" CheckedChanged="CheckPipeworkToGasMeterYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkPipeworkToGasMeterNo" CheckedChanged="CheckPipeworkToGasMeterNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkPipeworkToGasMeterNA" CheckedChanged="CheckPipeworkToGasMeterNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPipeworkToGasMeterNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Regulator and / or Meter" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkRegulatorAndOrMeterYes" CheckedChanged="CheckRegulatorAndOrMeterYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkRegulatorAndOrMeterNo" CheckedChanged="CheckRegulatorAndOrMeterNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkRegulatorAndOrMeterNA" CheckedChanged="CheckRegulatorAndOrMeterNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkRegulatorAndOrMeterNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Safety Notices / Labels" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkSafetyNoticesLabelsYes" CheckedChanged="CheckSafetyNoticesLabelsYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkSafetyNoticesLabelsNo" CheckedChanged="CheckSafetyNoticesLabelsNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkSafetyNoticesLabelsNA" CheckedChanged="CheckSafetyNoticesLabelsNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkSafetyNoticesLabelsNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Line Diagram of Gas Distribution System" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkLineDiagramYes" CheckedChanged="CheckLineDiagramYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkLineDiagramYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkLineDiagramYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkLineDiagramNo" CheckedChanged="CheckLineDiagramNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkLineDiagramNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkLineDiagramNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkLineDiagramNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkLineDiagramNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkLineDiagramNA" CheckedChanged="CheckLineDiagramNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkLineDiagramNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkLineDiagramNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Color Coding / Indication Tape" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkColorCodingIndicationTapeYes" CheckedChanged="CheckColorCodingIndicationTapeYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkColorCodingIndicationTapeNo" CheckedChanged="CheckColorCodingIndicationTapeNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkColorCodingIndicationTapeNA" CheckedChanged="CheckColorCodingIndicationTapeNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkColorCodingIndicationTapeNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Meter House Ventilation" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkMeterHouseVentilationYes" CheckedChanged="CheckMeterHouseVentilationYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMeterHouseVentilationYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMeterHouseVentilationYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkMeterHouseVentilationNo" CheckedChanged="CheckMeterHouseVentilationNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMeterHouseVentilationNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMeterHouseVentilationNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkMeterHouseVentilationNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkMeterHouseVentilationNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkMeterHouseVentilationNA" CheckedChanged="CheckMeterHouseVentilationNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMeterHouseVentilationNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMeterHouseVentilationNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Comment:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                            <local:LinelessEditor x:Name="meterHouseComment" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>

                    <Label Text="Ventilation Details" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Location:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="ventilationLocation" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Free Air - Existing" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkFreeAirExistingCM" IsChecked="True">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingCM}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingCM}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingMH}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingMH}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="cm²" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkFreeAirExistingMH">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingMH}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingMH}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingCM}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirExistingCM}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="m³/h" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>

                        <Grid ColumnSpacing="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                        
                            <VerticalStackLayout Spacing="5">
                                <Label Text="High Level:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                                <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                                    <local:LinelessEntry x:Name="freeAirExistingHighLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                                </Frame>
                            </VerticalStackLayout>

                            <VerticalStackLayout Grid.Column="1" Spacing="5">
                                <Label Text="Low Level:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                                <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                                    <local:LinelessEntry x:Name="freeAirExistingLowLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                                </Frame>
                            </VerticalStackLayout>
                        </Grid>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Free Air - Required" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkFreeAirRequiredCM" IsChecked="True">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirRequiredCM}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirRequiredCM}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkcheckFreeAirRequiredMH}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkcheckFreeAirRequiredMH}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="cm²" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkcheckFreeAirRequiredMH">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkcheckFreeAirRequiredMH}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkcheckFreeAirRequiredMH}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirRequiredCM}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFreeAirRequiredCM}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="m³/h" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>

                        <Grid ColumnSpacing="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <VerticalStackLayout Spacing="5">
                                <Label Text="High Level:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                                <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                                    <local:LinelessEntry x:Name="freeAirRequiredHighLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                                </Frame>
                            </VerticalStackLayout>

                            <VerticalStackLayout Grid.Column="1" Spacing="5">
                                <Label Text="Low Level:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                                <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                                    <local:LinelessEntry x:Name="freeAirRequiredLowLevel" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                                </Frame>
                            </VerticalStackLayout>
                        </Grid>
                    </VerticalStackLayout>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>
                
                    <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="BHDSNext2"/>
                </VerticalStackLayout>
            </ScrollView>

            <ScrollView x:Name="BHDSSection3" Grid.Row="1" IsVisible="False" VerticalScrollBarVisibility="Never">
                <VerticalStackLayout Spacing="40" Margin="0, 40, 0, 0">
                    <Label Text="Boiler House / Plant Room Details" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Main Flue" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkMainFlueYes" CheckedChanged="CheckMainFlueYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMainFlueYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMainFlueYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkMainFlueNo" CheckedChanged="CheckMainFlueNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMainFlueNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMainFlueNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkMainFlueNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkMainFlueNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkMainFlueNA" CheckedChanged="CheckMainFlueNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMainFlueNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkMainFlueNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Chimney / Flue Terminal Position" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkChimneyFlueTerminalPositionYes" CheckedChanged="CheckChimneyFlueTerminalPositionYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkChimneyFlueTerminalPositionNo" CheckedChanged="CheckChimneyFlueTerminalPositionNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkChimneyFlueTerminalPositionNA" CheckedChanged="CheckChimneyFlueTerminalPositionNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkChimneyFlueTerminalPositionNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Stub-Flues to Boilers" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkStubFluersToBoildersYes" CheckedChanged="CheckStubFluersToBoildersYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkStubFluersToBoildersYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkStubFluersToBoildersYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkStubFluersToBoildersNo" CheckedChanged="CheckStubFluersToBoildersNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkStubFluersToBoildersNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkStubFluersToBoildersNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkStubFluersToBoildersNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkStubFluersToBoildersNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkStubFluersToBoildersNA" CheckedChanged="CheckStubFluersToBoildersNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkStubFluersToBoildersNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkStubFluersToBoildersNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="ID Fan" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkIdFanYes" CheckedChanged="CheckIdFanYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkIdFanYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkIdFanYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkIdFanNo" CheckedChanged="CheckIdFanNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkIdFanNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkIdFanNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkIdFanNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkIdFanNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkIdFanNA" CheckedChanged="CheckIdFanNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkIdFanNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkIdFanNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Fan / Boiler Safety Interlock" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkFanBoilerSafetyInterlockYes" CheckedChanged="CheckFanBoilerSafetyInterlockYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkFanBoilerSafetyInterlockNo" CheckedChanged="CheckFanBoilerSafetyInterlockNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkFanBoilerSafetyInterlockNA" CheckedChanged="CheckFanBoilerSafetyInterlockNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkFanBoilerSafetyInterlockNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="General Compliance of Gas Pipe" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkGeneralComplianceOfGasPipeYes" CheckedChanged="CheckGeneralComplianceOfGasPipeYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkGeneralComplianceOfGasPipeNo" CheckedChanged="CheckGeneralComplianceOfGasPipeNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkGeneralComplianceOfGasPipeNA" CheckedChanged="CheckGeneralComplianceOfGasPipeNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkGeneralComplianceOfGasPipeNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Ventilation" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkVentilationYes" CheckedChanged="CheckVentilationYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkVentilationNo" CheckedChanged="CheckVentilationNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkVentilationNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkVentilationNA" CheckedChanged="CheckVentilationNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkVentilationNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Comments / Any Action Taken:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" HeightRequest="100" BackgroundColor="#222225" CornerRadius="10">
                            <local:LinelessEditor x:Name="boilerHousePlantRoomComments" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>

                    <Label Text="Emergancy Gas Isolation Satisfactory?" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="AIV" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkAIVYes" CheckedChanged="CheckAIVYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkAIVYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkAIVYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkAIVNo" CheckedChanged="CheckAIVNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkAIVNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkAIVNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkAIVNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkAIVNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkAIVNA" CheckedChanged="CheckAIVNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkAIVNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkAIVNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Manual" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkManualYes" CheckedChanged="CheckManualYesChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkManualYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkManualYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Yes" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkManualNo" CheckedChanged="CheckManualNoChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkManualNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkManualNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="No" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkManualNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkManualNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkManualNA" CheckedChanged="CheckManualNAChanged">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkManualNA}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkManualNA}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="N/A" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Inlet Working Pressure &#10;Test - Full Load (mbar):" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="inletWorkingPressureTestFullLoad" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" Keyboard="Numeric"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Inlet Working Pressure &#10;Test - Part Load (mbar):" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="inletWorkingPressureTestPartLoad" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" Keyboard="Numeric"/>
                        </Frame>
                    </VerticalStackLayout>
                
                    <VerticalStackLayout Spacing="5">
                        <Label Text="Standing Pressure (mbar):" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="standingPressure" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" Keyboard="Numeric"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Plant Gas Installation Volume (m³):" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="plantGasInstallationVolume" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Site Email Address:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" FontAttributes="Italic" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="#707070" BackgroundColor="#222225" CornerRadius="10">
                            <local:LinelessEditor x:Name="siteEmailAddress" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" IsEnabled="false"
                                                  Text="hp93@leicester.ac.uk
                                                        pjs56@leicester.ac.uk"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Plant Gas Tightness Test" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Center"/>

                        <FlexLayout Direction="Row" JustifyContent="SpaceEvenly">
                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkPlantGasTightnessTestYes" IsChecked="True">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Pass" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center"/>
                            </HorizontalStackLayout>

                            <HorizontalStackLayout>
                                <CheckBox x:Name="checkPlantGasTightnessTestNo">
                                    <CheckBox.Triggers>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="Color" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="Color" Value="#fff" />
                                        </DataTrigger>

                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestYes}, Path=IsChecked}" Value="True">
                                            <Setter Property="IsChecked" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="CheckBox" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestYes}, Path=IsChecked}" Value="False">
                                            <Setter Property="IsChecked" Value="True"/>
                                        </DataTrigger>
                                    </CheckBox.Triggers>
                                </CheckBox>

                                <Label Text="Fail" TextColor="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked, FallbackValue=Red}" FontSize="16" FontFamily="SatoshiMedium" VerticalTextAlignment="Center">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked}" Value="True">
                                            <Setter Property="TextColor" Value="Red" />
                                        </DataTrigger>
                                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference checkPlantGasTightnessTestNo}, Path=IsChecked}" Value="False">
                                            <Setter Property="TextColor" Value="#fff" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </HorizontalStackLayout>
                        </FlexLayout>
                    </VerticalStackLayout>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>
                
                    <Label Text="Copies must be sent to UoL Technicials  the main site e-mail and not to any site individuals e-mail addresses"
                           TextColor="#707070"
                           FontSize="16 "
                           FontFamily="SatoshiMedium"
                           FontAttributes="Italic"
                           HorizontalTextAlignment="Center"/>

                    <Frame Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>

                    <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="BHDSNext3"/>
                </VerticalStackLayout>
            </ScrollView>

            <ScrollView x:Name="BHDSSection4" Grid.Row="1" IsVisible="false" VerticalScrollBarVisibility="Never">
                <VerticalStackLayout Spacing="40" Margin="0, 40, 0, 0">
                    <VerticalStackLayout Spacing="5">
                        <Label Text="Engineer's Name:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="engineersName" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Contractor:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="#707070" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="contractor" Text="Ashwell Maintenance Ltd" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium" IsEnabled="false"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Company Gas-Safe Registration No°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="#707070" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEditor x:Name="companyGasSafeRegistrationNo" Text="81031" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium" IsEnabled="false"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Engineer's Gas Safe ID No°:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="engineersGasSafeIDNo" TextColor="#fff" FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Inspection Date:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="inspectionDate" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Client's Name:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="clientsName" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <VerticalStackLayout Spacing="5">
                        <Label Text="Date:" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" Margin="15, 0, 0, 0"/>

                        <Frame Padding="15, 0" BorderColor="Transparent" BackgroundColor="#222225" CornerRadius="100">
                            <local:LinelessEntry x:Name="date" TextColor="#fff"  FontSize="16 " FontFamily="SatoshiMedium"/>
                        </Frame>
                    </VerticalStackLayout>

                    <Frame Grid.Row="2" Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>

                    <Label Text="By sining this document, I certified that I carried out the above agreed works on the dates provided and all this information is correct."
                           TextColor="#707070"
                           FontSize="16 "
                           FontFamily="SatoshiMedium"
                           FontAttributes="Bold"
                           HorizontalTextAlignment="Center"/>

                    <Frame Grid.Row="2" Padding="0" MinimumHeightRequest="0" HeightRequest="5" BorderColor="Transparent" CornerRadius="100">
                        <BoxView Color="#222225"/>
                    </Frame>

                    <Button Text="Next" TextColor="#fff" FontSize="18" FontFamily="SatoshiMedium" HeightRequest="70" WidthRequest="250" BackgroundColor="#c20000" CornerRadius="40" Margin="0, 0, 0, 100" Clicked="BHDSNext4"/>
                </VerticalStackLayout>
            </ScrollView>
        
            <ScrollView x:Name="FolderSection" Grid.Row="1" IsVisible="False" VerticalScrollBarVisibility="Never">
                <VerticalStackLayout x:Name="_folderStackLayout" Spacing="40" Margin="0, 15, 0, 0">
                    <ListView x:Name="FoldersListView" SeparatorVisibility="None" VerticalScrollBarVisibility="Never" Margin="0, 0, 0, 120">
                        <ListView.RowHeight>60</ListView.RowHeight>

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <Border BackgroundColor="#222225" StrokeShape="RoundRectangle 40" HeightRequest="50" Stroke="Transparent" Padding="0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="0.5*"/>
                                                <ColumnDefinition Width="40"/>
                                            </Grid.ColumnDefinitions>

                                            <Button Grid.ColumnSpan="3" BackgroundColor="Transparent" MinimumHeightRequest="0" Clicked="FolderChosen" CommandParameter="{Binding Id}"/>

                                            <Label Text="{Binding Name}" TextColor="#fff" FontSize="16" FontFamily="SatoshiMedium" HorizontalTextAlignment="Start" VerticalTextAlignment="Center" LineBreakMode="TailTruncation" Margin="20, 0, 0, 0"/>
                                            <Label Grid.Column="1" Text="{Binding Timestamp}" TextColor="#707070" FontSize="12" FontFamily="SatoshiMedium" HorizontalTextAlignment="End" VerticalTextAlignment="Center" Margin="0, 0, 20, 0"/>
                                            <ImageButton Grid.Column="2" Source="pen.png" WidthRequest="20" HeightRequest="30" HorizontalOptions="End" CommandParameter="{Binding Id}" Margin="0, 0, 20, 0"/>
                                        </Grid>
                                    </Border>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </VerticalStackLayout>
            </ScrollView>
        </Grid>

        <Grid x:Name="folderAdd" IsVisible="False">
            <BoxView Grid.Row="1" Color="Transparent" HeightRequest="150" VerticalOptions="End" IsEnabled="False">
                <BoxView.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="Transparent"
                            Offset="0.1" />
                        <GradientStop Color="#141414"
                            Offset="0.8" />
                    </LinearGradientBrush>
                </BoxView.Background>
            </BoxView>

            <Frame x:Name="newFolder" Grid.RowSpan="2" HorizontalOptions="End" VerticalOptions="End"
               Padding="0" Margin="0, 0, 35, 35" BackgroundColor="Transparent" BorderColor="Transparent" WidthRequest="60" HeightRequest="60" CornerRadius="30">
                <Grid BackgroundColor="Red">
                    <Image Source="plus.png" Scale="0.5"/>

                    <Button BackgroundColor="Transparent" Clicked="NewFolder"/>
                </Grid>
            </Frame>
        </Grid>

        <ActivityIndicator x:Name="loadingBG" IsRunning="False" Color="Transparent" BackgroundColor="#80000000" Grid.RowSpan="2" Margin="-20, -20, -20, 0">
            <ActivityIndicator.IsVisible>
                <OnPlatform x:TypeArguments="x:Boolean">
                    <On Platform="Android, iOS" Value="True" />
                    <On Platform="Windows" Value="False" />
                </OnPlatform>
            </ActivityIndicator.IsVisible>
        </ActivityIndicator>
        <ActivityIndicator x:Name="loading" IsRunning="False" Color="Red" WidthRequest="75" Grid.RowSpan="2">
            <ActivityIndicator.IsVisible>
                <OnPlatform x:TypeArguments="x:Boolean">
                    <On Platform="Android, iOS" Value="True" />
                    <On Platform="Windows" Value="False" />
                </OnPlatform>
            </ActivityIndicator.IsVisible>
        </ActivityIndicator>
    </Grid>
</ContentPage>